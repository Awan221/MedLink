# Generated by Django 5.0.6 on 2025-06-14 19:18

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom de la spécialité')),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text='Icône Font Awesome ou autre', max_length=50)),
            ],
            options={
                'verbose_name': 'Spécialité',
                'verbose_name_plural': 'Spécialités',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'établissement")),
                ('hospital_type', models.CharField(choices=[('CHU', 'Centre Hospitalier Universitaire'), ('CHR', 'Centre Hospitalier Régional'), ('CH', 'Centre Hospitalier'), ('CLCC', 'Centre de Lutte Contre le Cancer'), ('PSY', 'Établissement Psychiatrique'), ('CLI', 'Clinique privée'), ('AUTRE', "Autre type d'établissement")], default='AUTRE', max_length=10, verbose_name="Type d'établissement")),
                ('address', models.TextField(verbose_name='Adresse complète')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, help_text='Utilisez les coordonnées de longitude/latitude (exemple: 2.12345, 48.12345)', null=True, srid=4326)),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone principal')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email de contact')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('services', models.TextField(blank=True, help_text='Liste des services disponibles, séparés par des virgules')),
                ('emergency', models.BooleanField(default=False, verbose_name="Service d'urgence disponible")),
                ('opening_hours', models.JSONField(blank=True, default=dict, help_text="Horaires d'ouverture au format JSON")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('specialties', models.ManyToManyField(blank=True, related_name='hospitals', to='hospitals.specialty', verbose_name='Spécialités disponibles')),
            ],
            options={
                'verbose_name': 'Établissement de santé',
                'verbose_name_plural': 'Établissements de santé',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HospitalRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note (1-5)')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='hospitals.hospital', verbose_name='Établissement')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Avis sur l'établissement",
                'verbose_name_plural': 'Avis sur les établissements',
                'ordering': ['-created_at'],
                'unique_together': {('hospital', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['name'], name='hospitals_h_name_507695_idx'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['city', 'postal_code'], name='hospitals_h_city_c4659a_idx'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['hospital_type'], name='hospitals_h_hospita_acbdf6_idx'),
        ),
    ]
